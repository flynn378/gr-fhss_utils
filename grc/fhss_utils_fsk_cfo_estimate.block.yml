# auto-generated by grc.converter

id: fhss_utils_fsk_cfo_estimate
label: FSK CFO Estimate
category: '[Sandia]/FHSS Utilities'

parameters:
-   id: search_depth
    label: Search Depth
    dtype: int
    default: '2000'
-   id: start_offset
    label: Start Offset
    dtype: int
    default: '0'
-   id: samples_to_average
    label: Samples to Average
    dtype: int
    default: '100'
-   id: threshold
    label: Threshold
    dtype: real
    default: '0.5'
-   id: start_finder_taps
    label: Start Finder Taps
    dtype: real_vector
    default: firdes.low_pass_2(1, 1, 0.1, 0.1, 40)

inputs:
-   domain: message
    id: pdu_in

outputs:
-   domain: message
    id: pdu_out

templates:
    imports: import fhss_utils
    make: fhss_utils.fsk_cfo_estimate(${search_depth}, ${start_offset}, ${samples_to_average},
        ${threshold}, ${start_finder_taps})

documentation: |-
    Estimates and corrects the CFO of a complex (undemodulated) FSK PDU burst.

    Does this by taking the magnitude of the signal, applying the start finder filter, then looking up to search_depth samples for the point where the magnitude crosses threshold*max_magnitude.

    Once the start point is found, skip start_offset samples and demodulate the next samples_to_average samples. The CFO is the average of the demodulated samples.

    The output is frequency shifted by the CFO estimate.

file_format: 1
